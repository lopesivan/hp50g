uerj
DIR
  \->func
  \<<
    X PEVAL EXPAND
  \>>
  briot\->
  \<<
    \-> P, X0, degree
    \<<
      {} 'cofs' STO
      P \->func
      X0
      1 degree
      FOR I  @ "I" is the local variable
        HORNER
        cofs
        +
        'cofs' STO
      NEXT    @ Repeat...
      {1} cofs +
      {cofs} PURGE
    \>>
  \>>
  \->briot
  \<<
    DUP2
    \-> P, X0
    \<<
      1 P AXL SIZE 1 -
      FOR I
        P
        X0
        I
        briot\->
        ROT
        func\-> AXL
        1 I
        START
          0
        NEXT
        I \->LIST
        +
        SWAP DROP
        SWAP DROP
      NEXT
      P AXL SIZE 1 - \->jLrmatrix
      @'\GSDAT' STO
      STO\GS
      "Briot-Ruffini"
      \GSDAT
    \>>
  \>>
  conf
  \<<
    HOME main
    -3.  usetf
    -22. setf
    -27. setf
    -34. setf
    -55. setf
    -56. setf
    -68. setf
    -72. setf
    -73. setf
    -74. setf
    -74. usetf
    -80. setf
    -81. setf
    -82. setf
    -90. setf
    -95. usetf
    -97. setf
    -98. setf
    -105. usetf
    -111. setf
    -116. setf
    -117. setf
    -119. setf
    -120. setf
    -128. setf
  \>>
  coord
  \<<
    44.2 KEYEVAL
    11.1 KEYEVAL
    33 KEYEVAL
  \>>
  CST {
    { + \<< 22.2 KEYEVAL uff \>> }
    { "grobs" \<< :3: "APPS/grobs.hp" EVAL \>> }
    { "CONF" \<< conf \>> }
    { HELP HELP }
      IVAN
    {">" \<< 33 KEYEVAL \>>}
    { "<" \<< 33.2 KEYEVAL \>>}
    { "he-ro"  \<< :3: "PROGRAMS/MAINWRAP" EVAL \>> }
    { "progs" \<< :3: "APPS/programs.hp" EVAL \>> }
    { "games" \<< :3: "APPS/games.hp" EVAL \>> }
    { "apps" \<< :3: "APPS/apps.hp" EVAL \>> }
  }
  derivadafx
  \<<
    X \.d
  \>>
  \->egyptfrac
  \<<
    0 SWAP
    WHILE DUP FXND NIP 1 >
    REPEAT DUP INV FXND IDIV2 DUP
       IF 0 \=!
       THEN SIGN
       END
       + INV ROT OVER + UNROT - EVAL
    END DROP
  \>>
  func\->
  \<<
    { } SWAP
    DO
      RCLVX DIV2 ROT + SWAP
    UNTIL { 0 0. } OVER POS
    END
    DROP
    AXL
  \>>
  inMatrref
  \<<
      DUP 1 + 2 \->LIST \->ARRY '\GSDAT' STO \GSDAT RREF
  \>>
  inMatSol
  \<<
    2 \->LIST \->ARRY B STO
    2 \->LIST \->ARRY A STO
    A INV B *
    {A B} PURGE
  \>>
  integralfx
  \<<
    0 X 3 ROLL X \.S
  \>>
  \->nInt
  \<< "usage: {Xi Xf}, f, {X Y Z}" \-> u
    \<<
      \-> ab, f, dx
      \<<
        IF dx SIZE 2 * ab SIZE =
        THEN u DOERR
        END
        ab AXL 2 ab SIZE 2 / \->rdmmatrix
        f
        1 dx SIZE 1 -
        FOR I
          SWAP
          dx SIZE I - 1 + COL- AXL OBJ\-> DROP SWAP
          4 ROLL
          dx
          I GET
          \.S
        NEXT
        SWAP
        OBJ\-> DROP SWAP
        ROT
        dx
        dx SIZE GET
        \.S
      \>>
    \>>
  \>>
  \->IInt
  \<<
    1 4
    START
      7 ROLL
    NEXT
    4 \->LIST
    UNROT
    2 \->LIST
    ROT SWAP
    \->nInt
  \>>
  \->IIInt
  \<<
    1 6
    START
      10 ROLL
    NEXT
    6 \->LIST
    5 ROLLD
    3 \->LIST
    \->nInt
  \>>
  LoadCST
  \<<
    22.2 KEYEVAL
  \>>
  \->matrix
  \<<
      2 \->LIST \->ARRY
  \>>
  matrix\->
  \<<
      OBJ\-> OBJ\-> DROP
  \>>
  \->rdmmatrix
  \<<
      2 \->LIST RDM
  \>>
  diagmatrix\->
  \<<
      2 \->LIST DIAG\->
  \>>
  \->vander
  \<<
      \->LIST VANDERMONDE
  \>>
  \->rndmatrix
  \<<
      2 \->LIST RANM
  \>>
  \->submatrix
  \<<
    2 \->LIST UNROT
    2 \->LIST
    SWAP
    SUB
  \>>
  \->replacematrix
  \<<
    2 \->LIST SWAP REPL
  \>>
  \->get
  \<<
      2 \->LIST GET
  \>>
  \->conmatrix
  \<<
      UNROT 2 \->LIST SWAP CON
  \>>
  \->put
  \<<
      UNROT 2 \->LIST SWAP PUT
  \>>
  \->geti
  \<<
      2 \->LIST GETI
  \>>
  \->puti
  \<<
      UNROT 2 \->LIST SWAP PUTI
  \>>
  \->jLcmatrix
  \<< DUP
    \-> n
    \<<
      1 SWAP
      FOR J
        OBJ\->
        \->ARRY
        IF J n <
        THEN
          J 1 + ROLL
        END
      NEXT
      IF n 1 >
      THEN
        1 n 1 -
        FOR J
          J 1 + ROLL
        NEXT
      END
      n COL\->
    \>>
  \>>
  \->jLrmatrix
  \<< DUP
    \-> n
    \<<
      1 SWAP
      FOR J
        OBJ\->
        \->ARRY
        IF J n <
        THEN
          J 1 + ROLL
        END
      NEXT
      IF n 1 >
      THEN
        1 n 1 -
        FOR J
          J 1 + ROLL
        NEXT
      END
      n ROW\->
    \>>
  \>>
  S\->C
  \<< \-> a b
    \<<
      'a*COS(b)+a*SIN(b)*i' EVAL
    \>>
  \>>
  setf
  \<< \-> x
    \<<
      IF x FC?C
      THEN x SF
      END
    \>>
  \>>
  showformula
  \<< \-> message
    \<<
      PUSH -70 SF
      "\127\127\127\127\127Show Formula\127\127\127\127\127"
      __TITLE__:Show Formula
      0 \->GROB
      message
      0 \->GROB GROBADD
      ""
      0 \->GROB GROBADD
      EQ
      0 \->GROB GROBADD
      SCROLL
      POP
    \>>
    EQ
  \>>
  toFloat
  \<<
    -105 setf
    -3 setf
    -17 usetf
  \>>
  toInteger
  \<<
    -105 usetf
    -3 usetf
    -17 setf
  \>>
  D\<-\->R
  \<< -18 CF -17 FS? \-> X
    \<<
      IF 'X'
      THEN DEG
      ELSE RAD
      END
    \>>
  \>>
  R\<-\->C
  \<<
    IF -103. FS?
    THEN -103. usetf
    ELSE -103. setf
    END
  \>>
  XY\<-\->P
  \<< -15 CF -16 FS? \-> X
    \<<
      IF 'X'
      THEN RECT
      ELSE CYLIN
      END
    \>>
  \>>
  usetf
  \<< \-> x
      \<<
        IF x FC?
        THEN 0.
        ELSE x CF
        END
      \>>
  \>>
  vectorDivide
  \<<
    AXL SWAP AXL SWAP / AXL
  \>>
  vectorExp
  \<<
    AXL SWAP AXL SWAP ^ AXL
  \>>
  vectorMultiply
  \<<
    HADAMARD
  \>>
  vector\GS
  \<<
    AXL \GSLIST EVAL
  \>>
  vector.
  \<<
    SWAP TRAN * TRACE EVAL
  \>>
  Xn
  \<< \-> str, N
      \<< 1 N
        FOR I
          str I + OBJ\->
        NEXT
      \>>
  \>>
  CST {
    {"SET" sets}
    {"i" in}
    {"o" op}
    {"sol"  solutions}
    {"poly" poly     }
    {">" \<< 33 KEYEVAL \>>}
    {"<" \<< 33.2 KEYEVAL \>>}
    { "calc" calc     }
    { "cir"  circuits }
    { "elmag"  elmag }
    { "ctrl" controle }
    {">" \<< 33 KEYEVAL \>>}
    {"<" \<< 33.2 KEYEVAL \>>}
    { "EDO"  edo      }
    { "stat" stat}
    { "mec" mec     }
    { "tools" tools     }
    {"[uff]<" \<< 33 KEYEVAL \>>}
  }
  sets
  DIR
    CST {
      { \|^ \<< UPDIR LoadCST \>> }
      {"XYZ\<)\<)" coord}
      XY\<-\->P
      D\<-\->R
      R\<-\->C
      {">" \<< 33 KEYEVAL \>>}
      { "ca2c" :3: "APPS/car2cil.hp" EVAL  }
      { "ca2e" :3: "APPS/car2es.hp" EVAL  }
      { "c2e" :3: "APPS/cil2es.hp" EVAL  }
      { "T1" \<<
        \Gh COS \Gh SIN 0
        \Gh SIN NEG \Gh COS 0
        0 0 1 3 3 \->matrix
      \>> }
      { "T2" \<<
         \Gh SIN 0 \Gh COS
         \Gh COS 0 \Gh SIN NEG
         0 1 0 3 3 \->matrix
      \>> }
      {"[Set]" \<< 33 KEYEVAL \>>}
    }
  END
END
